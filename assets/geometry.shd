#version 450

layout(points) in;
layout(triangle_strip) out;
layout(max_vertices = 4) out;

out vec2 texCoord;

uniform vec3 camera;
uniform mat4 worldToProj_matrix;

void main()
{
    vec3 pos = gl_in[0].gl_Position.xyz;
    vec3 toCamera = normalize(camera-pos);
    vec3 up = vec3(0.0,1.0,0.0);
    vec3 right = cross(toCamera, up);

    pos -= (right*0.25);
    gl_Position = worldToProj_matrix* vec4(pos,1.0);
    texCoord = vec2(0,0);
    //eyePosition =  vec4(pos,1.0);
    EmitVertex();

    pos += (up*0.5);
    gl_Position =  worldToProj_matrix* vec4(pos,1.0);
    texCoord = vec2(0,1.0);
    //eyePosition =  vec4(pos,1.0);
    EmitVertex();

    pos -= (up*0.5);
    pos += (right*0.5);
    gl_Position =  worldToProj_matrix* vec4(pos,1.0);
    texCoord = vec2(1.0,0);
    //eyePosition = vec4(pos,1.0);
    EmitVertex();

    pos += (up*0.5);
    gl_Position =  worldToProj_matrix* vec4(pos,1.0);
    texCoord = vec2(1.0,1.0);
    //eyePosition = vec4(pos,1.0);
    EmitVertex();

    EndPrimitive();
}